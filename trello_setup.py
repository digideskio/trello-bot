#!/usr/bin/env python
from trello.util import create_oauth_token
from ConfigParser import RawConfigParser

"""
This script really just simplifies the process of issuing OAuth tokens for the most common
use case of this bot. It merely reads off the api_{key,secret} already defined in the
cfg files, and uses the existing py-trello script to guide the user through the rest of
the process.
"""

# Snag the API key and secret. But load the config first ;)
config = RawConfigParser()
config.read(['bot.cfg', 'dev_secrets.cfg'])

trello_api_key = config.get('trello', 'api_key')
trello_api_secret = config.get('trello', 'api_secret')

access_token = create_oauth_token(expiration='never',
    scope='read,write',
    key=trello_api_key,
    secret=trello_api_secret,
    name='My%20Trello%20Bot',
    output=False
)

# Now, we dump the new values to our secret config file.
config_out = RawConfigParser()
config_out.add_section('trello')
config_out.set('trello', 'oauth_token', access_token['oauth_token'])
config_out.set('trello', 'oauth_secret', access_token['oauth_token_secret'])
with open('bot_secrets.cfg', 'w') as secrets:
    secrets.write('; !!!!! Automatically generated by trello_setup.py !!!!!\n')
    config_out.write(secrets)
